#!/usr/bin/env python3

"""
This tool conducts a ANCOVA analysis for enzyme activity data. If no significant covariation detected between pH and activity, a t-test will be performed for verifying if the peptide has significant impact on activity. Otherwise a linear regression will be executed using pH as independent variable, and the residues will be used in the t-test.
"""

from __future__ import annotations

import argparse
import logging

from pep_detective.src.ancova import CovarProcessor
from pep_detective.src.conn import init_conn, insert_db

logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(filename)s %(message)s")
logging.getLogger().setLevel(logging.INFO)
logger = logging.getLogger(__file__)


def parse_args():
    """Parse any command line arguments.

    :return: Parsed arguments
    :rtype: argparse.Namespace
    """

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-id",
        "--sample-id",
        help="tested sample id ",
        type=str,
    )
    parser.add_argument(
        "-i",
        "--input-file",
        help="tsv file containing 3 columns: activity, ph, and treatment",
        type=str,
    )
    parser.add_argument(
        "-p",
        "--p-value",
        help="maximal allowed P value for ANCOVA analysis",
        type=float,
    )
    parser.add_argument(
        "-db",
        "--database",
        help="path to database for ancova results storage",
        type=str,
    )

    return parser.parse_args()


def main(args: argparse.Namespace):

    ancova_results = CovarProcessor(
        sample_id=args.sample_id, input_path=args.input_file, max_covar_p_value=args.p_value
    ).t_test()
    insert_db(init_conn(args.database), ancova_results)


if __name__ == "__main__":
    main(parse_args())
